<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "file://zonbook/docbookx.dtd"[
<!ENTITY % xinclude SYSTEM "file://AWSShared/common/xinclude.mod">              %xinclude;
<!ENTITY % phrases-shared SYSTEM "file://AWSShared/common/phrases-shared.ent">  %phrases-shared;
<!ENTITY % phrases-appmesh SYSTEM "../shared/phrases-app-mesh.ent"> 
    %phrases-appmesh;
]>
<section id="proxy-authorization" role="topic">
  <info>
    <title id="proxy-authorization.title">Envoy Proxy authorization</title>
  </info>
  <para>Proxy authorization authorizes the <link linkend="envoy">Envoy</link> proxy running within
    an &ECS; task, in a Kubernetes pod running on &EKS;, or running on an &EC2; instance to read the
    configuration of one or more &collective-resource-name;s from the &MESH; Envoy Management
    Service. For customer accounts who already have Envoys connected to their &MESH; endpoint before
    04/26/2021, proxy authorization is required for virtual nodes that use <ulink
      url="https://docs.aws.amazon.com/app-mesh/latest/userguide/tls.html">Transport Layer Security
      (TLS)</ulink> and for virtual gateways (with or without TLS). For customer accounts who want
    to connect Envoys to their &MESH; endpoint after 04/26/2021, proxy authorization is required for
    all &MESH; capabilities. It is recommended for all customer accounts to enable proxy
    authorization for all virtual nodes, even if they don't use TLS, to have a secure and consistent
    experience using &IAM; for authorization to specific resources. Proxy authorization requires
    that the <code>appmesh:StreamAggregatedResources</code> permission is specified in an &IAM;
    policy. The policy must be attached to an &IAM; role, and that &IAM; role must be attached to
    the compute resource on which you host the proxy.</para>
  <section id="create-iam-policy">
    <info>
      <title id="create-iam-policy.title">Create &IAM; policy</title>
    </info>
    <para>If you want all &collective-resource-name;s in a service mesh to be able to read the
      configuration for all &collective-resource-name;s, then skip to <xref
        linkend="create-iam-role" endterm="create-iam-role.title"/>. If you want to limit the
      &collective-resource-name;s that configuration can be read from by individual
      &collective-resource-name;s, then you need to create one or more &IAM; policies. Limiting the
      &collective-resource-name;s that configuration can be read from to only the Envoy proxy
      running on specific compute resources is recommended. Create an IAM policy and add the
        <code>appmesh:StreamAggregatedResources</code> permission to the policy. The following
      example policy allows the configuration of the virtual nodes named <code>serviceBv1</code> and
        <code>serviceBv2</code> to be read in a service mesh. Configuration can't be read for any
      other virtual nodes defined in the service mesh. For more information about creating or
      editing an IAM policy, see <ulink type="documentation"
        url="IAM/latest/UserGuide/access_policies_create.html">Creating IAM Policies</ulink> and
        <ulink type="documentation" url="IAM/latest/UserGuide/access_policies_manage-edit.html">Edit
        IAM Policies</ulink>.</para>
    <programlisting>{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "appmesh:StreamAggregatedResources",
            "Resource": [
                "arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/serviceBv1",
                "arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/serviceBv2"
            ]
        }
    ]
}</programlisting>
    <para>You can create multiple policies, with each policy restricting access to different
      &collective-resource-name;s. </para>
  </section>
  <section id="create-iam-role">
    <info>
      <title id="create-iam-role.title">Create &IAM; role</title>
    </info>
    <para>If you want all &collective-resource-name;s in a service mesh to be able to read the
      configuration for all &collective-resource-name;s, then you only need to create one IAM role.
      If you want to limit the &collective-resource-name;s that configuration can be read from by
      individual &collective-resource-name;s, then you need to create a role for each policy that
      you created in the previous step. Complete the instructions for the compute resource that the
      proxy runs on.</para>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">&EKS;</emphasis> &endash; If you want to use a singe role, then
          you can use the existing role that was created and assigned to the worker nodes when you
          created your cluster. To use multiple roles, your cluster must meet the requirements
          defined in <ulink type="documentation"
            url="eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling IAM Roles
            for Service Accounts on your Cluster</ulink>. Create the IAM roles and associate the
          roles with Kubernetes service accounts. For more information, see <ulink
            type="documentation"
            url="eks/latest/userguide/create-service-account-iam-policy-and-role.html">Creating an
            IAM Role and Policy for your Service Account</ulink> and <ulink type="documentation"
            url="eks/latest/userguide/specify-service-account-role.html">Specifying an IAM Role for
            your Service Account</ulink>.</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">&ECS;</emphasis> &endash; Select <guilabel>&AWS;
            service,</guilabel> select <guilabel>Elastic Container Service</guilabel>, and then
          select the <guilabel>Elastic Container Service Task</guilabel> use case when creating your
          &IAM; role.</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">&EC2;</emphasis> &endash; Select <guilabel>&AWS;
            service,</guilabel> select <guilabel>EC2</guilabel>, and then select the
            <guilabel>EC2</guilabel> use case when creating your &IAM; role. This applies whether
          you host the proxy directly on an &EC2; instance or on Kubernetes running on an
          instance.</para>
      </listitem>
    </itemizedlist>
    <para>For more information about how to create an &IAM; role, see <ulink type="documentation"
        url="IAM/latest/UserGuide/id_roles_create_for-service.html#roles-creatingrole-service-console"
        >Creating a Role for an &AWS; Service</ulink>.</para>
  </section>
  <section id="attach-iam-policy">
    <info>
      <title id="attach-iam-policy.title">Attach &IAM; policy</title>
    </info>
    <para>If you want all &collective-resource-name;s in a service mesh to be able to read the
      configuration for all &collective-resource-name;s, then attach the <code><ulink type="console"
          url="iam/home#/policies/arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess%24jsonEditor"
          >AWSAppMeshEnvoyAccess</ulink></code> managed &IAM; policy to the &IAM; role that you
      created in a previous step. If you want to limit the &collective-resource-name;s that
      configuration can be read from by individual &collective-resource-name;s, then attach each
      policy that you created to each role that you created. For more information about attaching a
      custom or managed &IAM; policy to an &IAM; role, see <ulink type="documentation"
        url="IAM/latest/UserGuide/access_policies_manage-attach-detach.html#add-policies-console"
        >Adding IAM Identity Permissions</ulink>. </para>
  </section>

  <section id="attach-role">
    <info>
      <title id="attach-role.title">Attach &IAM; role</title>
    </info>
    <para>Attach each &IAM; role to the appropriate compute resource:</para>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">&EKS;</emphasis> &endash; If you attached the policy to the role
          attached to your worker nodes, you can skip this step. If you created separate roles, then
          assign each role to a separate Kubernetes service account, and assign each service account
          to an individual Kubernetes pod deployment spec that includes the Envoy proxy. For more
          information, see <ulink type="documentation"
            url="eks/latest/userguide/specify-service-account-role.html">Specifying an IAM Role for
            your Service Account</ulink> in the &guide-eks-user; and <ulink
            url="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
            >Configure Service Accounts for Pods</ulink> in the Kubernetes documentation.</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">&ECS;</emphasis> &endash; Attach an &ECS; Task Role to the task
          definition that includes the Envoy proxy. The task can be deployed with the EC2 or
          &FARGATE; launch type. For more information about how to create an &ECS; Task Role and
          attach it to a task, see <ulink type="documentation"
            url="AmazonECS/latest/developerguide/task-iam-roles.html#create_task_iam_policy_and_role"
            >Specifying an IAM Role for your Tasks</ulink>.</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">&EC2;</emphasis> &endash; The &IAM; role must be attached to the
          &EC2; instance that hosts the Envoy proxy. For more information about how to attach a role
          to an &EC2; instance, see <ulink type="marketing"
            url="premiumsupport/knowledge-center/assign-iam-role-ec2-instance">Iâ€™ve created an IAM
            role, and now I want to assign it to an EC2 instance</ulink>.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="confirm-permission">
    <info>
      <title id="confirm-permission.title">Confirm permission</title>
    </info>
    <para>Confirm that the <code>appmesh:StreamAggregatedResources</code> permission is assigned to
      the compute resource that you host the proxy on by selecting one of the compute service
      names.</para>
    <tablist>
      <tablistentry>
        <tabname>&EKS;</tabname>
        <tabcontent>
          <para>A custom policy may be assigned to the role assigned to the worker nodes, to
            individual pods, or both. It's recommended however, that you assign the policy only at
            individual pods, so that you can restrict access of individual pods to individual
            &collective-resource-name;s. If the policy is attached to the role assigned to the
            worker nodes, select the <guilabel>&EC2;</guilabel> tab, and complete the steps found
            there for your worker node instances. To determine which IAM role is assigned to a
            Kubernetes pod, complete the following steps.</para>
          <procedure>
            <step>
              <para>View the details of a Kubernetes deployment that includes the pod that you want
                to confirm that a Kubernetes service account is assigned to. The following command
                views the details for a deployment named
                <replaceable>my-deployment</replaceable>.</para>
              <programlisting><userinput>kubectl describe deployment <replaceable>my-deployment</replaceable></userinput></programlisting>
              <para>In the returned output note the value to the right of <code>Service
                  Account:</code>. If a line that starts with <code>Service Account:</code> doesn't
                exist, then a custom Kubernetes service account isn't currently assigned to the
                deployment. You'll need to assign one. For more information, see <ulink
                  url="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
                  >Configure Service Accounts for Pods</ulink> in the Kubernetes
                documentation.</para>
            </step>
            <step>
              <para>View the details of the service account returned in the previous step. The
                following command views the details of a service account named
                  <replaceable>my-service-account</replaceable>.</para>
              <programlisting><userinput>kubectl describe serviceaccount <replaceable>my-service-account</replaceable></userinput></programlisting>
              <para>Provided the Kubernetes service account is associated to an &IAMlong; role, one
                of the lines returned will look similar to the following example.</para>
              <screen>Annotations:         eks.amazonaws.com/role-arn=arn:aws:iam::123456789012:role/my-deployment</screen>
              <para>In the previous example <code>my-deployment</code> is the name of the IAM role
                that the service account is associated with. If the service account output doesn't
                contain a line similar to the example above, then the Kubernetes service account
                isn't associated to an &IAMlong; account and you need to associate it to one. For
                more information, see <ulink type="documentation"
                  url="eks/latest/userguide/specify-service-account-role.html">Specifying an IAM
                  Role for your Service Account</ulink>. </para>
            </step>
            <step>&IAMConsole_DirectURL;</step>
            <step>
              <para>In the left navigation, select <guilabel>Roles</guilabel>. Select the name of
                the IAM role that you noted in a previous step.</para>
            </step>
            <step>
              <para>Confirm that either the custom policy you created previously, or the
                    <code><ulink type="console"
                    url="iam/home#/policies/arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess%24jsonEditor"
                    >AWSAppMeshEnvoyAccess</ulink></code> managed policy is listed. If neither
                policy is attached, <link linkend="attach-iam-policy">attach an &IAM; policy</link>
                to the &IAM; role. If you want to attach a custom &IAM; policy but don't have one,
                then you need to <link linkend="create-iam-policy">create a custom &IAM;
                  policy</link> with the required permissions. If a custom &IAM; policy is attached,
                select the policy and confirm that it contains <code>"Action":
                  "appmesh:StreamAggregatedResources"</code>. If it does not, then you need to add
                that permission to your custom &IAM; policy. You can also confirm that the
                appropriate &ARNlong; for a specific &collective-resource-name; is listed. If no
                &ARN;s are listed, then you can edit the policy to add, remove, or change the listed
                &ARN;s. For more information, see <ulink type="documentation"
                  url="IAM/latest/UserGuide/access_policies_manage-edit.html">Edit &IAM;
                  Policies</ulink> and <xref linkend="create-iam-policy"
                  endterm="create-iam-policy.title"/>.</para>
            </step>
            <step>
              <para>Repeat the previous steps for each Kubernetes pod that contains the Envoy
                proxy.</para>
            </step>
          </procedure>
        </tabcontent>
      </tablistentry>
      <tablistentry>
        <tabname>&ECS;</tabname>
        <tabcontent>
          <procedure>
            <step>
              <para>From the &ECS; console, choose <guilabel>Task Definitions</guilabel>.</para>
            </step>
            <step>
              <para>Select your &ECS; task.</para>
            </step>
            <step>
              <para>On the <guilabel>Task Definition Name</guilabel> page, select your task
                definition.</para>
            </step>
            <step>
              <para>On the <guilabel>Task Definition</guilabel> page, select the link of the &IAM;
                role name that is to the right of <guilabel>Task Role</guilabel>. If an &IAM; role
                isn't listed, then you need to <link linkend="create-iam-role">create an &IAM;
                  role</link> and attach it to your task by <ulink type="documentation"
                  url="AmazonECS/latest/developerguide/update-task-definition.html">updating your
                  task definition.</ulink></para>
            </step>
            <step>
              <para>In the <guilabel>Summary</guilabel> page, on the
                  <guilabel>Permissions</guilabel> tab, confirm that either the custom policy you
                created previously, or the <code><ulink type="console"
                    url="iam/home#/policies/arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess%24jsonEditor"
                    >AWSAppMeshEnvoyAccess</ulink></code> managed policy is listed. If neither
                policy is attached, <link linkend="attach-iam-policy">attach an &IAM; policy</link>
                to the &IAM; role. If you want to attach a custom &IAM; policy but don't have one,
                then you need to <link linkend="create-iam-policy">create the custom &IAM;
                  policy</link>. If a custom &IAM; policy is attached, select the policy and confirm
                that it contains <code>"Action": "appmesh:StreamAggregatedResources"</code>. If it
                does not, then you need to add that permission to your custom &IAM; policy. You can
                also confirm that the appropriate &ARNlong; for a specific
                &collective-resource-name;s is listed. If no &ARN;s are listed, then you can edit
                the policy to add, remove, or change the listed &ARN;s. For more information, see
                  <ulink type="documentation"
                  url="/IAM/latest/UserGuide/access_policies_manage-edit.html">Edit &IAM;
                  Policies</ulink> and <xref linkend="create-iam-policy"
                  endterm="create-iam-policy.title"/>.</para>
            </step>
            <step>
              <para>Repeat the previous steps for each task definition that contains the Envoy
                proxy.</para>
            </step>
          </procedure>
        </tabcontent>
      </tablistentry>
      <tablistentry>
        <tabname>&EC2;</tabname>
        <tabcontent>
          <procedure>
            <step>
              <para>From the &EC2; console, select <guilabel>Instances</guilabel> in the left
                navigation.</para>
            </step>
            <step>
              <para>Select one of your instances that hosts the Envoy proxy.</para>
            </step>
            <step>
              <para>In the <guilabel>Description</guilabel> tab, select the link of the &IAM; role
                name that is to the right of <guilabel>&IAM; role</guilabel>. If an &IAM; role isn't
                listed, then you need to <link linkend="create-iam-role">create an &IAM;
                role</link>.</para>
            </step>
            <step>
              <para>In the <guilabel>Summary</guilabel> page, on the
                  <guilabel>Permissions</guilabel> tab, confirm that either the custom policy you
                created previously, or the <code><ulink type="console"
                    url="iam/home#/policies/arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess%24jsonEditor"
                    >AWSAppMeshEnvoyAccess</ulink></code> managed policy is listed. If neither
                policy is attached, <link linkend="attach-iam-policy">attach the &IAM; policy</link>
                to the &IAM; role. If you want to attach a custom &IAM; policy but don't have one,
                then you need to <link linkend="create-iam-policy">create the custom &IAM;
                  policy</link>. If a custom &IAM; policy is attached, select the policy and confirm
                that it contains <code>"Action": "appmesh:StreamAggregatedResources"</code>. If it
                does not, then you need to add that permission to your custom &IAM; policy. You can
                also confirm that the appropriate &ARNlong; for a specific
                &collective-resource-name;s is listed. If no &ARN;s are listed, then you can edit
                the policy to add, remove, or change the listed &ARN;s. For more information, see
                  <ulink type="documentation"
                  url="IAM/latest/UserGuide/access_policies_manage-edit.html">Edit &IAM;
                  Policies</ulink> and <xref linkend="create-iam-policy"
                  endterm="create-iam-policy.title"/>.</para>
            </step>
            <step>
              <para>Repeat the previous steps for each instance that you host the Envoy proxy
                on.</para>
            </step>
          </procedure>
        </tabcontent>
      </tablistentry>
    </tablist>
  </section>
</section>
