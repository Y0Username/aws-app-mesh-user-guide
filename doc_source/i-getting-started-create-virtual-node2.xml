<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "file://zonbook/docbookx.dtd"
[
  <!ENTITY % xinclude SYSTEM "file://AWSShared/common/xinclude.mod">
  %xinclude;
  <!ENTITY % phrases-shared SYSTEM "file://AWSShared/common/phrases-shared.ent">
  %phrases-shared;
<!ENTITY % phrases-appmesh SYSTEM "../shared/phrases-app-mesh.ent"> 
    %phrases-appmesh;
]>

<section id="create-virtual-node2">
    <info>
        <title id="create-virtual-node2.title">Step 2: Create a virtual node</title>
    </info>
    <para>A virtual node acts as a logical pointer to an actual service. For more information, see
            <xref linkend="virtual_nodes" endterm="virtual_nodes.title"/>. </para>
    <para>Create a virtual node named <code>serviceB</code>, since one of the virtual nodes
        represents the actual service named <code>serviceB</code>. The actual service that the
        virtual node represents is discoverable through <code>DNS</code> with a hostname of
        <code>serviceb.apps.local</code>. Alternately, you can discover actual services
        using &CMAP;. The virtual node will listen for traffic using the HTTP/2 protocol on port
        80. Other protocols are also supported, as are health checks. You will create virtual
        nodes for <code>serviceA</code> and <code>serviceBv2</code> in a later step.</para>
    <tablist>
        <tablistentry>
            <tabname>&console;</tabname>
            <tabcontent>
                <procedure>
                    <step>
                        <para>For <guilabel>Virtual node name</guilabel>, enter
                            <userinput>serviceB</userinput>. </para>
                    </step>
                    <step>
                        <para>For <guilabel>Service discovery method</guilabel>, choose
                            <guilabel>DNS</guilabel> and enter
                            <userinput>serviceb.apps.local</userinput> for <guilabel>DNS
                                hostname</guilabel>.</para>
                    </step>
                    <step>
                        <para>Under <guilabel>Listener configuration</guilabel>, choose
                            <guilabel>http2</guilabel> for <guilabel>Protocol</guilabel> and
                            enter <userinput>80</userinput> for
                            <guilabel>Port</guilabel>.</para>
                    </step>
                    
                    <step>
                        <para>To continue, choose <guilabel>Next</guilabel>.</para>
                    </step>
                </procedure>
            </tabcontent>
        </tablistentry>
        <tablistentry>
            <tabname>&CLI;</tabname>
            <tabcontent>
                <procedure>
                    <step>
                        <para>Create a file named <code>create-virtual-node-serviceb.json</code>
                            with the following contents:</para>
                        <programlisting language="json">{
    "meshName": "apps",
    "spec": {
        "listeners": [
            {
                "portMapping": {
                    "port": 80,
                    "protocol": "http2"
                }
            }
        ],
        "serviceDiscovery": {
            "dns": {
                "hostname": "serviceB.apps.local"
            }
        }
    },
    "virtualNodeName": "serviceB"
}</programlisting>
                    </step>
                    <step>
                        <para>Create the virtual node with the <ulink type="documentation"
                            url="cli/latest/reference/appmesh/create-virtual-node.html"
                            >create-virtual-node</ulink> command using the JSON file as
                            input.</para>
                        <programlisting><userinput>aws appmesh create-virtual-node --cli-input-json file://create-virtual-node-serviceb.json</userinput></programlisting>
                    </step>
                </procedure>
            </tabcontent>
        </tablistentry>
    </tablist>
</section>