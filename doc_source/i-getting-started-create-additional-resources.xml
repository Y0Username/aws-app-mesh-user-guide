<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "file://zonbook/docbookx.dtd"
[
  <!ENTITY % xinclude SYSTEM "file://AWSShared/common/xinclude.mod">
  %xinclude;
  <!ENTITY % phrases-shared SYSTEM "file://AWSShared/common/phrases-shared.ent">
  %phrases-shared;
<!ENTITY % phrases-appmesh SYSTEM "../shared/phrases-app-mesh.ent"> 
    %phrases-appmesh;
]>
<section id="create-additional-resources">
        <info>
            <title id="create-additional-resources.title">Step 5: Create additional
                resources</title>
        </info>
        <para>To complete the scenario, you need to:</para>
        <itemizedlist>
            <listitem>
                <para>Create one virtual node named <code>serviceBv2</code> and another named
                        <code>serviceA</code>. Both virtual nodes listen for requests over HTTP/2
                    port 80. For the <code>serviceA</code> virtual node, configure a backend of
                        <code>serviceb.apps.local</code>, since all outbound traffic from the
                        <code>serviceA</code> virtual node is sent to the virtual service named
                        <code>serviceb.apps.local</code>. Though not covered in this guide, you can
                    also specify a file path to write access logs to for a virtual node.</para>
            </listitem>
            <listitem>
                <para>Create one additional virtual service named <code>servicea.apps.local</code>,
                    which will send all traffic directly to the <code>serviceA</code> virtual
                    node.</para>
            </listitem>
            <listitem>
                <para>Update the <code>serviceB</code> route that you created in a previous step to
                    send 75 percent of its traffic to the <code>serviceB</code> virtual node and 25
                    percent of its traffic to the <code>serviceBv2</code> virtual node. Over time,
                    you can continue to modify the weights until <code>serviceBv2</code> receives
                    100 percent of the traffic. Once all traffic is sent to <code>serviceBv2</code>,
                    you can shut down and discontinue the <code>serviceB</code> virtual node and actual service. As
                    you change weights, your code does not require any modification, because the
                        <code>serviceb.apps.local</code> virtual and actual service names don&apos;t
                    change. Recall that the <code>serviceb.apps.local</code> virtual service sends
                    traffic to the virtual router, which routes the traffic to the virtual nodes.
                    The service discovery names for the virtual nodes can be changed at any
                    time.</para>
            </listitem>
        </itemizedlist>
        <tablist>
            <tablistentry>
                <tabname>&console;</tabname>
                <tabcontent>
                    <procedure>
                        <step>
                            <para>In the left navigation pane, select
                                <guilabel>Meshes</guilabel>.</para>
                        </step>
                        <step>
                            <para>Select the <code>apps</code> mesh that you created in a previous
                                step.</para>
                        </step>
                        <step>
                            <para>In the left navigation pane, select <guilabel>Virtual
                                    nodes</guilabel>.</para>
                        </step>
                        <step>
                            <para>Choose <guilabel>Create virtual node</guilabel>.</para>
                        </step>
                        <step>
                            <para>For <guilabel>Virtual node name</guilabel>, enter
                                    <userinput>serviceBv2</userinput>, for <guilabel>Service
                                    discovery method</guilabel>, choose <guilabel>DNS</guilabel>,
                                and for <guilabel>DNS hostname</guilabel>, enter
                                    <userinput>servicebv2.apps.local</userinput>.</para>
                        </step>
                        <step>
                            <para>For <guilabel>Listener configuration</guilabel>, select
                                    <guilabel>http2</guilabel> for <guilabel>Protocol</guilabel> and
                                enter <userinput>80</userinput> for
                                <guilabel>Port</guilabel>.</para>
                        </step>
                        <step>
                            <para>Choose <guilabel>Create virtual node</guilabel>.</para>
                        </step>
                        <step>
                            <para>Choose <guilabel>Create virtual node</guilabel> again. Enter
                                    <userinput>serviceA</userinput> for the <guilabel>Virtual node
                                    name</guilabel>. For <guilabel>Service discovery
                                    method</guilabel>, choose <guilabel>DNS</guilabel>, and for
                                    <guilabel>DNS hostname</guilabel>, enter
                                    <userinput>servicea.apps.local</userinput>.</para>
                        </step>
                        <step>
                            <para>For <guilabel>Enter a virtual service name</guilabel> under
                                    <guilabel>New backend</guilabel>, enter
                                    <userinput>servicea.apps.local</userinput>.</para>
                        </step>
                        <step>
                            <para>Under <guilabel>Listener configuration</guilabel>, choose
                                    <guilabel>http2</guilabel> for <guilabel>Protocol</guilabel>,
                                enter <userinput>80</userinput> for <guilabel>Port</guilabel>, and
                                then choose <guilabel>Create virtual node</guilabel>.</para>
                        </step>
                        <step>
                            <para>In the left navigation pane, select<guilabel> Virtual
                                    routers</guilabel> and then select the <code>serviceB</code>
                                virtual router from the list.</para>
                        </step>
                        <step>
                            <para>Under <guilabel>Routes</guilabel>, select the route named
                                    <code>ServiceB</code> that you created in a previous step, and
                                choose <guilabel>Edit</guilabel>.</para>
                        </step>
                        <step>
                            <para>Under <guilabel>Targets</guilabel>, <guilabel>Virtual node
                                    name</guilabel>, change the value of <guilabel>Weight</guilabel>
                                for <code>serviceB</code> to <userinput>75</userinput>.</para>
                        </step>
                        <step>
                            <para>Choose <guilabel>Add target</guilabel>, choose
                                <code>serviceBv2</code> from the dropdown list, and set the value of
                                <guilabel>Weight</guilabel> to <userinput>25</userinput>.</para>
                        </step>
                        <step>
                            <para>Choose <guilabel>Save</guilabel>.</para>
                        </step>
                        <step>
                            <para>In the left navigation pane, select<guilabel> Virtual
                                    services</guilabel> and then choose <guilabel>Create virtual
                                    service</guilabel>.</para>
                        </step>
                        <step>
                            <para>Enter <userinput>servicea.apps.local</userinput> for
                                    <guilabel>Virtual service name</guilabel>, select
                                    <guilabel>Virtual node</guilabel> for
                                    <guilabel>Provider</guilabel>, select <code>serviceA</code> for
                                    <guilabel>Virtual node</guilabel>, and then choose
                                    <guilabel>Create virtual service.</guilabel></para>
                        </step>
                    </procedure>
                </tabcontent>
            </tablistentry>
            <tablistentry>
                <tabname>&CLI;</tabname>
                <tabcontent>
                    <procedure>
                        <step>
                            <para>Create the <code>serviceBv2</code> virtual node.</para>
                            <substeps>
                                <step>
                                    <para>Create a file named
                                            <code>create-virtual-node-servicebv2.json</code> with
                                        the following contents:</para>
                                    <programlisting language="json">{
    "meshName": "apps",
    "spec": {
        "listeners": [
            {
                "portMapping": {
                    "port": 80,
                    "protocol": "http2"
                }
            }
        ],
        "serviceDiscovery": {
            "dns": {
                "hostname": "serviceBv2.apps.local"
            }
        }
    },
    "virtualNodeName": "serviceBv2"
}</programlisting>
                                </step>
                                <step>
                                    <para>Create the virtual node.</para>
                                    <programlisting><userinput>aws appmesh create-virtual-node --cli-input-json file://create-virtual-node-servicebv2.json</userinput></programlisting>
                                </step>
                            </substeps>
                        </step>
                        <step>
                            <para>Create the <code>serviceA</code> virtual node.</para>
                            <substeps>
                                <step>
                                    <para>Create a file named
                                            <code>create-virtual-node-servicea.json</code> with the
                                        following contents:</para>
                                    <programlisting language="json">{
   "meshName" : "apps",
   "spec" : {
      "backends" : [
         {
            "virtualService" : {
               "virtualServiceName" : "serviceb.apps.local"
            }
         }
      ],
      "listeners" : [
         {
            "portMapping" : {
               "port" : 80,
               "protocol" : "http2"
            }
         }
      ],
      "serviceDiscovery" : {
         "dns" : {
            "hostname" : "servicea.apps.local"
         }
      }
   },
   "virtualNodeName" : "serviceA"
}
</programlisting>
                                </step>
                                <step>
                                    <para>Create the virtual node.</para>
                                    <programlisting><userinput>aws appmesh create-virtual-node --cli-input-json file://create-virtual-node-servicea.json</userinput></programlisting>
                                </step>
                            </substeps>
                        </step>
                        <step>
                            <para>Update the <code>serviceb.apps.local</code> virtual service that
                                you created in a previous step to send its traffic to the
                                    <code>serviceB</code> virtual router. When the virtual service
                                was originally created, it did not send traffic anywhere, since the
                                    <code>serviceB</code> virtual router had not been created
                                yet.</para>
                            <substeps>
                                <step>
                                    <para>Create a file named
                                            <code>update-virtual-service.json</code> with the
                                        following contents:</para>
                                    <programlisting language="json">{
   "meshName" : "apps",
   "spec" : {
      "provider" : {
         "virtualRouter" : {
            "virtualRouterName" : "serviceB"
         }
      }
   },
   "virtualServiceName" : "serviceb.apps.local"
}</programlisting>
                                </step>
                                <step>
                                    <para>Update the virtual service with the <ulink
                                            type="documentation"
                                            url="cli/latest/reference/appmesh/update-virtual-service.html"
                                            >update-virtual-service</ulink> command.</para>
                                    <programlisting><userinput>aws appmesh update-virtual-service --cli-input-json file://update-virtual-service.json</userinput></programlisting>
                                </step>
                            </substeps>
                        </step>
                        <step>
                            <para>Update the <code>serviceB</code> route that you created in a
                                previous step.</para>
                            <substeps>
                                <step>
                                    <para>Create a file named <code>update-route.json</code> with
                                        the following contents:</para>
                                    <programlisting language="json">{
   "meshName" : "apps",
   "routeName" : "serviceB",
   "spec" : {
      "http2Route" : {
         "action" : {
            "weightedTargets" : [
               {
                  "virtualNode" : "serviceB",
                  "weight" : 75
               },
               {
                  "virtualNode" : "serviceBv2",
                  "weight" : 25
               }
            ]
         },
         "match" : {
            "prefix" : "/"
         }
      }
   },
   "virtualRouterName" : "serviceB"
}</programlisting>
                                </step>
                                <step>
                                    <para>Update the route with the <ulink type="documentation"
                                            url="cli/latest/reference/appmesh/update-route.html"
                                            >update-route</ulink> command.</para>
                                    <programlisting><userinput>aws appmesh update-route --cli-input-json file://update-route.json</userinput></programlisting>
                                </step>
                            </substeps>
                        </step>
                        <step>
                            <para>Create the <code>serviceA</code> virtual service.</para>
                            <substeps>
                                <step>
                                    <para>Create a file named
                                            <code>create-virtual-servicea.json</code> with the
                                        following contents:</para>
                                    <programlisting language="json">{
   "meshName" : "apps",
   "spec" : {
      "provider" : {
         "virtualNode" : {
            "virtualNodeName" : "serviceA"
         }
      }
   },
   "virtualServiceName" : "servicea.apps.local"
}</programlisting>
                                </step>
                                <step>
                                    <para>Create the virtual service.</para>
                                    <programlisting><userinput>aws appmesh create-virtual-service --cli-input-json file://create-virtual-servicea.json</userinput></programlisting>
                                </step>
                            </substeps>
                        </step>
                    </procedure>
                </tabcontent>
            </tablistentry>
        </tablist>
        <formalpara>
            <title>Mesh summary</title>
            <para>Before you created the service mesh, you had three actual services named
                    <code>servicea.apps.local</code>, <code>serviceb.apps.local</code>, and
                    <code>servicebv2.apps.local</code>. In addition to the actual services, you now
                have a service mesh that contains the following resources that represent the actual
                services:</para>
        </formalpara>
        <itemizedlist>
            <listitem>
                <para>Two virtual services. The proxy sends all traffic from the
                        <code>servicea.apps.local</code> virtual service to the
                        <code>serviceb.apps.local</code> virtual service through a virtual router.
                </para>
            </listitem>
            <listitem>
                <para>Three virtual nodes named <code>serviceA</code>, <code>serviceB</code>, and
                        <code>serviceBv2</code>. The Envoy proxy uses the service discovery
                    information configured for the virtual nodes to look up the IP addresses of the
                    actual services. </para>
            </listitem>
            <listitem>
                <para>One virtual router with one route that instructs the Envoy proxy to route 75
                    percent of inbound traffic to the <code>serviceB</code> virtual node and 25
                    percent of the traffic to the <code>serviceBv2</code> virtual node. </para>
            </listitem>
        </itemizedlist>
    </section>