<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "file://zonbook/docbookx.dtd"
[
    <!ENTITY % xinclude SYSTEM "file://AWSShared/common/xinclude.mod">
    %xinclude;
    <!ENTITY % phrases-shared SYSTEM "file://AWSShared/common/phrases-shared.ent">
    %phrases-shared;
    <!ENTITY % phrases-appmesh SYSTEM "../shared/phrases-app-mesh.ent"> 
    %phrases-appmesh;
]>
<chapter role="topic" id="observability">
    <info>
        <title id="observability.title">&MESH; observability</title>
        <titleabbrev>Observability</titleabbrev>
    </info>
    <para>One of the benefits from working with &MESH; is greater visibility into your microservice
        applications. &MESH; is able to work with many different logging, metric, and tracing
        solutions.</para>
    <para>The Envoy proxy and &MESH; offer the following types of tools to help you gain a clearer
        view of your applications and proxies:</para>
    <itemizedlist>
        <listitem>
            <para><ulink url="https://docs.aws.amazon.com/app-mesh/latest/userguide/envoy-logs.html"
                    >Logging</ulink></para>
        </listitem>
        <listitem>
            <para><ulink url="https://docs.aws.amazon.com/app-mesh/latest/userguide/metrics.html"
                    >Metrics</ulink></para>
        </listitem>
        <listitem>
            <para><ulink url="https://docs.aws.amazon.com/app-mesh/latest/userguide/tracing.html"
                    >Tracing</ulink></para>
        </listitem>
    </itemizedlist>
    <section role="topic" id="envoy-logs">
        <info>
            <title id="envoy-logs.title">Logging</title>
        </info>
        <para>When you create your virtual nodes, you have the option to configure Envoy access
            logs. In the console, this is in the <guilabel>Advanced configuration</guilabel> section
            of the virtual node create or update workflows.</para>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/logging.png" format="PNG" width="100%" scalefit="1"
                    contentdepth="100%"/>
            </imageobject>
        </mediaobject>
        <para>The preceding image shows a logging path of <filename>/dev/stdout</filename> for Envoy
            access logs. The following code block shows the JSON representation that you can use in
            the &CLI;.</para>
        <programlisting>      "logging": { 
         "accessLog": { 
            "file": { 
               "path": "<replaceable>/dev/stdout</replaceable>"
            }
         }
      }</programlisting>
        <para>When you send Envoy access logs to <filename>/dev/stdout</filename>, they are mixed in
            with the Envoy container logs. You can export them to a log storage and processing
            service like &CWL; using standard Docker log drivers such as <code>awslogs</code>. For
            more information, see <ulink type="documentation"
                url="AmazonECS/latest/developerguide/using_awslogs.html">Using the awslogs Log
                Driver</ulink> in the &ECS; Developer Guide. To export only the Envoy access logs
            (and ignore the other Envoy container logs), you can set the
                <code>ENVOY_LOG_LEVEL</code> to <code>off</code>. For more information, see <ulink
                url="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/access_log.html"
                >Access logging</ulink> in the Envoy documentation.</para>
        <formalpara>
            <title>Enable access logs on Kubernetes</title>
            <para>When using the <ulink type="documentation"
                    url="app-mesh/latest/userguide/mesh-k8s-integration.html">&MESH; Controller for
                    Kubernetes</ulink>, you can configure virtual nodes with access logging by
                adding the logging configuration to the virtual node spec, as shown in the following
                example.</para>
        </formalpara>
        <programlisting>---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: <replaceable>virtual-node-name</replaceable>
  namespace: <replaceable>namespace</replaceable>
spec:
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: <replaceable>hostname</replaceable>
  logging:
    accessLog:
      file:
        path: "/dev/stdout"</programlisting>
        <para>Your cluster must have a log forwarder to collect these logs, such as Fluentd. For
            more information see, <ulink type="documentation"
                url="AmazonCloudWatch/latest/monitoring/Container-Insights-setup-logs.html">Set up
                Fluentd as a DaemonSet to send logs to &CWL;</ulink>.</para>
        <para>Envoy also writes various debugging logs from its filters to <code>stdout</code>.
            These logs are useful for gaining insights into both Envoy’s communication with &MESH;
            and service-to-service traffic. Your specific logging level can be configured using the
                <code>ENVOY_LOG_LEVEL</code> environment variable. For example, the following text
            is from an example debug log showing the cluster that Envoy matched for a particular
            HTTP request.</para>
        <programlisting role="nocopy">[debug][router] [source/common/router/router.cc:434] [C4][S17419808847192030829] cluster 'cds_ingress_howto-http2-mesh_color_client_http_8080' match for URL '/ping'</programlisting>
        <section id="firelens-cloudwatch-logging">
            <info>
                <title id="firelens-cloudwatch-logging.title">Firelens and Cloudwatch</title>
            </info>
            <para><ulink
                    url="https://aws.amazon.com/about-aws/whats-new/2019/11/aws-launches-firelens-log-router-for-amazon-ecs-and-aws-fargate/#:~:text=FireLens%20is%20a%20container%20log,for%20log%20analytics%20and%20storage.&amp;text=This%20means%20you%20can%20use,your%20own%20Fluentd%20output%20plugin."
                    >Firelens</ulink> is a container log router you can use to collect logs for
                &ECS; and &FARGATElong;. You can find an example of using Firelens in our <ulink
                    url="https://github.com/aws-samples/amazon-ecs-firelens-examples">&AWS; Samples
                    repository</ulink>.</para>
            <para>You can use &CW; to gather logging information as well as metrics. You can find
                more information on &CW; in our <ulink
                    url="https://docs.aws.amazon.com/app-mesh/latest/userguide/metrics.html#cloudwatch"
                    >Metrics</ulink> section of the &MESH; docs.</para>
        </section>
    </section>

    <section role="topic" id="metrics">
        <info>
            <title id="metrics.title">Metrics</title>
        </info>
        <para>Envoy emits many statistics on both its own operation and various dimensions on
            inbound and outbound traffic. To learn more about Envoy statistics, see <ulink
                url="https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/observability/statistics"
                >Statistics</ulink> in the Envoy documentation. These metrics are available through
            the <code>/stats</code> endpoint on the proxy’s administration port, which is typically
                <code>9901</code>. For more information about the stats endpoint, see <ulink
                url="https://www.envoyproxy.io/docs/envoy/latest/operations/admin#get--stats"
                >Statistics endpoint</ulink> in the Envoy documentation. For more information about
            the administration interface, see <xref linkend="ts-bp-enable-proxy-admin-interface"
                endterm="ts-bp-enable-proxy-admin-interface.title"/>.</para>
        <xi:include href="cloudwatch.xml"/>
        <xi:include href="prometheus.xml"/>
        <xi:include href="datadog.xml"/>
    </section>
    <section role="topic" id="tracing">
        <info>
            <title id="tracing.title">Tracing</title>
        </info>
        <important>
            <para>To fully implement tracing, you'll need to update your application.</para>
            <para>To see all the available data from your chosen service, you'll have to instrument
                your application using the applicable libraries.</para>
        </important>
        <xi:include href="x-ray.xml"/>
        <xi:include href="jaeger.xml"/>
        <section id="datadog-tracing">
            <info>
                <title id="datadog-tracing.title">Datadog for tracing</title>
            </info>
            <para>Datadog can be used for tracing as well as metrics. For more information and
                installation instructions, find the guide specific to your application language in
                the <ulink url="https://docs.datadoghq.com/tracing/setup_overview/">Datadog
                    documentation</ulink>.</para>
        </section>
    </section>
</chapter>
